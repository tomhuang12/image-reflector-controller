name: build

on:
  pull_request:
  push:
    branches:
    - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Restore go cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Setup Kubernetes
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: v0.11.1
        image: kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Set up kubebuilder
      uses: fluxcd/pkg/actions/kubebuilder@main
    - name: Run tests
      run: make test
      env:
        KUBEBUILDER_ASSETS: ${{ github.workspace }}/kubebuilder/bin
    - name: Build container image
      run: make docker-build IMG=ghcr.io/fluxcd/${{ github.event.repository.name }}:latest
      env:
        KUBEBUILDER_ASSETS: ${{ github.workspace }}/kubebuilder/bin
    - name: Install CRDs
      run: make install
    - name: Run default status test
      run: |
        kubectl apply -f config/testdata/status-defaults
        for crd in imagepolicy imagerepository ; do
          RESULT=$(kubectl get ${crd} status-defaults -o go-template={{.status}})
          EXPECTED='map[observedGeneration:-1]'
          if [ "${RESULT}" != "${EXPECTED}" ] ; then
            echo -e "${RESULT}\n\ndoes not equal\n\n${EXPECTED} for CRD ${crd}"
            exit 1
          fi
        done